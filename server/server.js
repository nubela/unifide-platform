// Generated by CoffeeScript 1.6.3
(function() {
  var connect_4sq_auth, connect_facebook_auth, connect_twitter_auth, create_item, del_4sq_user, del_4sq_venue, del_brand_mention_keyword, del_container, del_facebook_page, del_facebook_user, del_item, del_twitter_user, get_4sq_venues_managed, get_all_orders, get_biz_info, get_child_containers_and_items, get_facebook_auth_url, get_facebook_pages, get_foursquare_auth_url, get_twitter_auth_url, get_user_email, http_api, new_cashback, new_coupon, new_discount, new_manual_order, new_shipping_method, new_tax, put_4sq_venue, put_brand_mention_keyword, put_container, put_facebook_page, serialize;

  get_biz_info = function() {
    var resp;
    this.unblock();
    resp = Meteor.http.get(BACKEND_URL + "business/info/");
    return JSON.parse(resp.content);
  };

  serialize = function(obj) {
    var p, str;
    str = [];
    for (p in obj) {
      if (obj.hasOwnProperty(p)) {
        str.push(encodeURIComponent(p) + "=" + encodeURIComponent(obj[p]));
      }
    }
    return str.join("&");
  };

  put_brand_mention_keyword = function(keyword) {
    this.unblock();
    return Meteor.http.put(BACKEND_URL + "brand_mention/keyword/", {
      params: {
        keyword: keyword
      }
    });
  };

  del_brand_mention_keyword = function(keyword) {
    this.unblock();
    return Meteor.http.del(BACKEND_URL + "brand_mention/keyword/?" + serialize({
      keyword: keyword
    }));
  };

  get_child_containers_and_items = function(path_lis) {
    var resp;
    this.unblock();
    resp = Meteor.http.get(BACKEND_URL + "container+item/?" + serialize({
      path_lis: JSON.stringify(path_lis)
    }));
    return JSON.parse(resp.content);
  };

  put_container = function(path_lis, description) {
    this.unblock();
    return Meteor.http.put(BACKEND_URL + "container/", {
      params: {
        path_lis: JSON.stringify(path_lis),
        description: description
      }
    });
  };

  del_item = function(item_id) {
    this.unblock();
    return Meteor.http.del(BACKEND_URL + "item/?" + serialize({
      item_id: item_id
    }));
  };

  del_item = function(item_id) {
    this.unblock();
    return Meteor.http.del(BACKEND_URL + "item/?" + serialize({
      item_id: item_id
    }));
  };

  get_all_orders = function() {
    var resp;
    this.unblock();
    resp = Meteor.http.get(BACKEND_URL + "order/");
    return JSON.parse(resp.content);
  };

  del_container = function(container_id) {
    this.unblock();
    return Meteor.http.del(BACKEND_URL + "container/?" + serialize({
      container_id: container_id
    }));
  };

  get_facebook_auth_url = function(p, b) {
    var result;
    this.unblock();
    result = Meteor.http.get(BACKEND_URL + "social_connect/facebook/auth/", {
      params: {
        platform: p,
        brand_name: b
      }
    });
    if (result.statusCode !== 200) {

    } else {
      return result.data.auth_url;
    }
  };

  connect_facebook_auth = function(c, brand_name) {
    var result;
    this.unblock();
    result = Meteor.http.put(BACKEND_URL + "social_connect/facebook/", {
      params: {
        user_id: this.userId,
        code: c,
        brand_name: brand_name
      }
    });
    if (result.statusCode !== 200) {
      return console.log(result.error);
    }
  };

  get_facebook_pages = function(brand_name) {
    var result;
    this.unblock();
    result = Meteor.http.get(BACKEND_URL + "social_connect/facebook/page/", {
      params: {
        user_id: this.userId,
        brand_name: brand_name
      }
    });
    if (result.statusCode !== 200) {
      console.log(result.error);
    } else {
      return result.data.page_list;
    }
  };

  put_facebook_page = function(brand_name, page_id) {
    var result;
    this.unblock();
    result = Meteor.http.put(BACKEND_URL + "social_connect/facebook/page/", {
      params: {
        user_id: this.userId,
        brand_name: brand_name,
        page_id: page_id
      }
    });
    if (result.statusCode !== 200) {
      console.log(result.error);
    }
    return _FBPages.remove({});
  };

  del_facebook_user = function(brand_name) {
    var result;
    this.unblock();
    result = Meteor.http.del(BACKEND_URL + "social_connect/facebook/user/?user_id=" + this.userId + "&brand_name=" + brand_name);
    if (result.statusCode !== 200) {
      return console.log(result.error);
    }
  };

  del_facebook_page = function(brand_name) {
    var result;
    this.unblock();
    result = Meteor.http.del(BACKEND_URL + "social_connect/facebook/page/?user_id=" + this.userId + "&brand_name=" + brand_name);
    if (result.statusCode !== 200) {
      return console.log(result.error);
    }
  };

  get_twitter_auth_url = function(platform, brand) {
    var result;
    this.unblock();
    result = Meteor.http.get(BACKEND_URL + "social_connect/twitter/auth/", {
      params: {
        user_id: this.userId,
        brand_name: brand
      }
    });
    if (result.statusCode !== 200) {
      console.log(result.error);
    } else {
      return result.data;
    }
  };

  connect_twitter_auth = function(verifier, brand_name) {
    var result;
    this.unblock();
    result = Meteor.http.put(BACKEND_URL + "social_connect/twitter/", {
      params: {
        user_id: this.userId,
        brand_name: brand_name,
        oauth_verifier: verifier
      }
    });
    if (result.statusCode !== 200) {
      return console.log(result.error);
    }
  };

  del_twitter_user = function(brand_name) {
    var result;
    this.unblock();
    result = Meteor.http.del(BACKEND_URL + "social_connect/twitter/user/?user_id=" + this.userId + "&brand_name=" + brand_name);
    if (result.statusCode !== 200) {
      return console.log(result.error);
    }
  };

  get_foursquare_auth_url = function(platform, brand) {
    var result;
    this.unblock();
    result = Meteor.http.get(BACKEND_URL + "social_connect/foursquare/auth/", {
      params: {
        user_id: this.userId,
        brand_name: brand
      }
    });
    if (result.statusCode !== 200) {
      return console.log(result.error);
    } else {
      return result.data.auth_url;
    }
  };

  connect_4sq_auth = function(code, brand_name) {
    var result;
    this.unblock();
    result = Meteor.http.put(BACKEND_URL + "social_connect/foursquare/", {
      params: {
        user_id: this.userId,
        brand_name: brand_name,
        code: code
      }
    });
    if (result.statusCode !== 200) {
      return console.log(result.error);
    }
  };

  get_4sq_venues_managed = function(brand_name) {
    var result;
    this.unblock();
    result = Meteor.http.get(BACKEND_URL + "social_connect/foursquare/venue/managed/", {
      params: {
        user_id: this.userId,
        brand_name: brand_name
      }
    });
    if (result.statusCode !== 200) {
      return console.log(result.error);
    } else {
      return result.data.venues;
    }
  };

  put_4sq_venue = function(brand_name, venue_id) {
    var result;
    this.unblock();
    result = Meteor.http.put(BACKEND_URL + "social_connect/foursquare/venue/", {
      params: {
        user_id: this.userId,
        brand_name: brand_name,
        venue_id: venue_id
      }
    });
    if (result.statusCode !== 200) {
      return console.log(result.error);
    }
  };

  del_4sq_venue = function(brand_name, venue_id) {
    var result;
    this.unblock();
    result = Meteor.http.del(BACKEND_URL + "social_connect/foursquare/venue/?user_id=" + this.userId + "&brand_name=" + brand_name + "&venue_id=" + venue_id);
    if (result.statusCode !== 200) {
      return console.log(result.error);
    }
  };

  del_4sq_user = function(brand_name) {
    var result;
    this.unblock();
    result = Meteor.http.del(BACKEND_URL + "social_connect/foursquare/user/?user_id=" + this.userId + "&brand_name=" + brand_name);
    if (result.statusCode !== 200) {
      return console.log(result.error);
    }
  };

  http_api = function(verb, url, args) {
    var result;
    this.unblock();
    console.log(args);
    result = Meteor.http[verb](BACKEND_URL + url, {
      params: args
    });
    if (result.statusCode !== 200) {
      return console.log(result.error);
    } else {
      return result;
    }
  };

  get_user_email = function(username) {
    var record;
    this.unblock();
    record = Meteor.users.findOne({
      username: username
    });
    return record.emails[0].address;
  };

  create_item = function(data) {
    this.unblock();
    return Meteor.http.put("" + BACKEND_URL + "item/", {
      params: data
    });
  };

  new_discount = function(discount) {
    this.unblock();
    discount["admin_id"] = Meteor.userId();
    return Meteor.http.put("" + BACKEND_URL + "discount/", {
      params: discount
    });
  };

  new_coupon = function(coupon) {
    this.unblock();
    coupon["admin_id"] = Meteor.userId();
    return Meteor.http.put("" + BACKEND_URL + "coupon/", {
      params: coupon
    });
  };

  new_cashback = function(cashback) {
    this.unblock();
    cashback["admin_id"] = Meteor.userId();
    return Meteor.http.put("" + BACKEND_URL + "cashback/", {
      params: cashback
    });
  };

  new_tax = function(tax) {
    this.unblock();
    tax["admin_id"] = Meteor.userId();
    return Meteor.http.put("" + BACKEND_URL + "tax/", {
      params: tax
    });
  };

  new_shipping_method = function(method) {
    this.unblock();
    method["admin_id"] = Meteor.userId();
    return Meteor.http.put("" + BACKEND_URL + "shipping/", {
      params: method
    });
  };

  new_manual_order = function(order) {
    this.unblock();
    order["admin_id"] = Meteor.userId();
    return Meteor.http.put("" + BACKEND_URL + "order/", {
      params: order
    });
  };

  Meteor.methods({
    get_all_orders: get_all_orders,
    get_biz_info: get_biz_info,
    put_container: put_container,
    get_child_containers_and_items: get_child_containers_and_items,
    put_brand_mention_keyword: put_brand_mention_keyword,
    del_brand_mention_keyword: del_brand_mention_keyword,
    del_item: del_item,
    del_container: del_container,
    get_platform_url: function() {
      return PLATFORM_URL;
    },
    get_facebook_auth_url: get_facebook_auth_url,
    connect_facebook_auth: connect_facebook_auth,
    get_facebook_pages: get_facebook_pages,
    put_facebook_page: put_facebook_page,
    del_facebook_user: del_facebook_user,
    del_facebook_page: del_facebook_page,
    get_twitter_auth_url: get_twitter_auth_url,
    connect_twitter_auth: connect_twitter_auth,
    del_twitter_user: del_twitter_user,
    get_foursquare_auth_url: get_foursquare_auth_url,
    connect_foursquare_auth: connect_4sq_auth,
    get_foursquare_venues_managed: get_4sq_venues_managed,
    put_foursquare_venue: put_4sq_venue,
    del_foursquare_venue: del_4sq_venue,
    del_foursquare_user: del_4sq_user,
    http_api: http_api,
    get_user_email: get_user_email,
    create_item: create_item,
    new_discount: new_discount,
    new_coupon: new_coupon,
    new_cashback: new_cashback,
    new_tax: new_tax,
    new_shipping_method: new_shipping_method,
    new_manual_order: new_manual_order
  });

}).call(this);
