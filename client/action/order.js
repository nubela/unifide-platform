// Generated by CoffeeScript 1.6.3
(function() {
  var ORDERS_PAGE_PAGE, createOrder, getPage, rehashOrderItems;

  this.ORDER_SESSION = {
    SUBURL: "ORDERSubUrl"
  };

  this.ORDER_TEMPLATE = {
    MAIN: "order_all",
    NEW: "order_compose"
  };

  this.ORDER_PAGE = {
    MAIN: "all",
    COMPOSE: "new"
  };

  ORDERS_PAGE_PAGE = 20;

  Template.order.view = function() {
    return Template[getPage()]();
  };

  Template.order_compose.created = function() {
    Meteor.subscribe("all_users");
    Meteor.subscribe("all_shipping");
    return Meteor.subscribe("all_items");
  };

  Template.order_compose.rendered = function() {
    $("#order-compose-form").off("submit");
    return $("#order-compose-form").on("submit", function(evt) {
      evt.preventDefault();
      return createOrder();
    });
  };

  Template.order_compose.shipping_methods = function() {
    return ShippingRule.find({}, {
      transform: function(doc) {
        doc["id"] = doc._id.valueOf();
        return doc;
      }
    });
  };

  Template.order_compose.events = {
    "click .submit-btn": function(evt) {
      evt.preventDefault();
      return createOrder();
    },
    "click #add-order-item-btn": function(evt) {
      var order_item_template;
      order_item_template = $("#order-item-template").clone().removeAttr("id").removeClass("hidden");
      $("#order-item-container").append(order_item_template);
      return rehashOrderItems();
    },
    "click .rm-order-item-btn": function(evt) {
      $(evt.target).parents(".control-group").remove();
      return rehashOrderItems();
    },
    "focus #user_id": function(evt) {
      return searchUserId(function(success, user_id, username, email) {
        if (success) {
          return $(evt.target).val("" + username + " " + email).attr("data-user-id", user_id);
        }
      });
    },
    "click .item-selection": function(evt) {
      return searchItemId(function(success, item_id, item_name) {
        if (success) {
          return $(evt.target).val(item_name).attr("data-item-id", item_id);
        }
      });
    }
  };

  rehashOrderItems = function() {
    var i;
    i = 1;
    return _.each($(".order-item"), function(order_item) {
      if ($(order_item).attr("id") == null) {
        $(order_item).find(".item_no").text(i);
        return i += 1;
      }
    });
  };

  createOrder = function() {
    var dic;
    if ($("#order-compose-form").parsley("validate")) {
      dic = {
        apply_debits_credits: $("apply_debits_credits").val(),
        user_id: $("#user_id").attr("data-user-id"),
        status: $("#status").val(),
        user_notes: $("#request-notes").val(),
        admin_notes: $("#admin-notes").val(),
        apply_coupon: $("#coupon-code").val(),
        shipping_method: $("#shipping-method").val(),
        items: []
      };
      _.each($(".order-item"), function(order_item) {
        var item_id, quantity;
        if ($(order_item).attr("id") == null) {
          quantity = $(".qty").val();
          item_id = $(".item-selection").attr("data-item-id");
          return dic.items.push({
            obj_id: item_id,
            quantity: quantity
          });
        }
      });
      dic.items = JSON.stringify(dic.items);
      return Meteor.call("new_manual_order", dic, function() {
        return Router.navigate("/order");
      });
    }
  };

  getPage = function() {
    var slugs;
    slugs = Session.get(ORDER_SESSION.SUBURL);
    if (slugs == null) {
      return ORDER_TEMPLATE.MAIN;
    }
    slugs = slugs.split("/");
    slugs = _.filter(slugs, function(s) {
      return s !== "";
    });
    if (slugs.length >= 1) {
      if (slugs[0] === ORDER_PAGE.COMPOSE) {
        return ORDER_TEMPLATE.NEW;
      }
    }
    return ORDER_TEMPLATE.MAIN;
  };

}).call(this);
