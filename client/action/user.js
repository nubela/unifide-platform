// Generated by CoffeeScript 1.6.3
(function() {
  var ITEMS_PER_PAGE, createUser, getPage;

  this.USER_SESSION = {
    SUBURL: "USERSubUrl"
  };

  this.USER_TEMPLATE = {
    MAIN: "user_all",
    NEW: "user_compose"
  };

  this.USER_PAGE = {
    MAIN: "all",
    COMPOSE: "new"
  };

  ITEMS_PER_PAGE = 20;

  Template.user.rendered = function() {
    return scrollTop();
  };

  Template.user.view = function() {
    return Template[getPage()]();
  };

  Template.user_compose.created = function() {
    return Meteor.subscribe("all_groups");
  };

  Template.user_compose.groups = function() {
    return Group.find({}, {
      sort: {
        name: 1
      }
    });
  };

  Template.user_compose.events = {
    "submit #user-compose-form": function(evt) {
      evt.preventDefault();
      return createUser();
    },
    "click .save-btn": function(evt) {
      evt.preventDefault();
      return createUser();
    }
  };

  createUser = function() {
    var data_lis, dic, entry, _i, _len;
    if ($("#user-compose-form").parsley("validate")) {
      data_lis = $("#user-compose-form").serializeArray();
      dic = {};
      for (_i = 0, _len = data_lis.length; _i < _len; _i++) {
        entry = data_lis[_i];
        dic[entry.name] = entry.value;
      }
      dic.user_groups = JSON.stringify($("#user-groups").val());
      dic.status = $("#status").val();
      return Meteor.call("new_user", dic, function() {
        return Router.navigate("/user");
      });
    }
  };

  getPage = function() {
    var slugs;
    slugs = Session.get(USER_SESSION.SUBURL);
    if (slugs == null) {
      return USER_TEMPLATE.MAIN;
    }
    slugs = slugs.split("/");
    slugs = _.filter(slugs, function(s) {
      return s !== "";
    });
    if (slugs.length >= 1) {
      if (slugs[0] === USER_PAGE.COMPOSE) {
        return USER_TEMPLATE.NEW;
      }
    }
    return USER_TEMPLATE.MAIN;
  };

}).call(this);
