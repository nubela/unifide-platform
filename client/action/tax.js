// Generated by CoffeeScript 1.6.3
(function() {
  var ITEMS_PER_PAGE, createTax, getPage, getPageNo;

  this.TAX_SESSION = {
    SUBURL: "TAXSubUrl"
  };

  this.TAX_TEMPLATE = {
    MAIN: "tax_all",
    NEW: "tax_compose"
  };

  this.TAX_PAGE = {
    MAIN: "all",
    COMPOSE: "new"
  };

  ITEMS_PER_PAGE = 20;

  Template.tax.rendered = function() {
    return scrollTop();
  };

  Template.tax.view = function() {
    return Template[getPage()]();
  };

  Template.tax_all.created = function() {
    Meteor.subscribe("all_admins");
    return Meteor.subscribe("all_taxes");
  };

  Template.tax_all.rendered = function() {
    return null;
  };

  Template.tax_all.current_tax = function() {
    return TaxRule.findOne({
      status: "enabled"
    });
  };

  Template.tax_all.taxes = function() {
    var page_no_0_idx;
    page_no_0_idx = getPageNo() - 1;
    return TaxRule.find({}, {
      limit: ITEMS_PER_PAGE,
      skip: page_no_0_idx * ITEMS_PER_PAGE,
      sort: {
        modification_timestamp_utc: -1
      },
      transform: function(doc) {
        doc["id"] = doc._id.valueOf();
        doc["admin"] = Meteor.users.findOne({
          _id: doc.admin_id
        });
        doc["has_description"] = doc.description.length > 0;
        doc["has_disable_btn"] = doc.status === "enabled";
        return doc;
      }
    });
  };

  Template.tax_all.events = {
    "click [data-expand]": function(evt) {
      var elem, id;
      elem = $(evt.target).parents("[data-expand]")[0];
      id = $(elem).attr("data-expand");
      $("[data-expanded]").addClass("hidden");
      return $("[data-expanded=" + id + "]").removeClass("hidden");
    },
    "click .disable-btn": function(evt) {
      var tax_id;
      tax_id = $(evt.target).parents("[data-expanded]").attr("data-expanded");
      TaxRule.update({
        _id: new Meteor.Collection.ObjectID(tax_id)
      }, {
        $set: {
          status: "disabled"
        }
      });
      return flashAlert("Tax disabled.", "");
    },
    "click .enable-btn": function(evt) {
      var tax_id;
      tax_id = $(evt.target).parents("[data-expanded]").attr("data-expanded");
      TaxRule.update({
        _id: new Meteor.Collection.ObjectID(tax_id)
      }, {
        $set: {
          status: "enabled"
        }
      });
      return flashAlert("Tax enabled.", "");
    },
    "click .delete-btn": function(evt) {
      var tax_id;
      tax_id = $(evt.target).parents("[data-expanded]").attr("data-expanded");
      return bootbox.confirm("Confirm delete?", function(res) {
        if (res) {
          return TaxRule.remove({
            _id: new Meteor.Collection.ObjectID(tax_id)
          });
        }
      });
    }
  };

  Template.tax_all.current_page = function() {
    return getPageNo();
  };

  Template.tax_all.next_page_url = function() {
    var next_page, page_no;
    page_no = getPageNo();
    next_page = page_no + 1;
    return "/tax/" + next_page;
  };

  Template.tax_all.prev_page_url = function() {
    var page_no, prev_page;
    page_no = getPageNo();
    prev_page = page_no - 1;
    return "/tax/" + prev_page;
  };

  Template.tax_all.has_next = function() {
    var total_items, total_pages;
    total_items = TaxRule.find({}).count();
    total_pages = Math.ceil(total_items / ITEMS_PER_PAGE);
    return getPageNo() < total_pages;
  };

  Template.tax_all.has_prev = function() {
    return getPageNo() >= 2;
  };

  Template.tax_compose.rendered = function() {
    $("#tax-compose-form").off("submit");
    return $("#tax-compose-form").on("submit", function(evt) {
      evt.preventDefault();
      return createTax();
    });
  };

  Template.tax_compose.events = {
    "click .save-active-btn": function(evt) {
      evt.preventDefault();
      return createTax(true);
    },
    "click .save-btn": function(evt) {
      evt.preventDefault();
      return createTax();
    }
  };

  getPageNo = function() {
    var slugs;
    slugs = Session.get(TAX_SESSION.SUBURL);
    if (slugs == null) {
      return 1;
    }
    slugs = slugs.split("/");
    slugs = _.filter(slugs, function(s) {
      return s !== "";
    });
    if (slugs.length >= 1) {
      return parseInt(slugs[0]);
    }
    return 1;
  };

  createTax = function(make_active) {
    var data_lis, dic, entry, _i, _len;
    if (make_active == null) {
      make_active = false;
    }
    if ($("#tax-compose-form").parsley("validate")) {
      data_lis = $("#tax-compose-form").serializeArray();
      dic = {};
      for (_i = 0, _len = data_lis.length; _i < _len; _i++) {
        entry = data_lis[_i];
        dic[entry.name] = entry.value;
      }
      dic.make_active = make_active;
      return Meteor.call("new_tax", dic, function() {
        return Router.navigate("/taxes", true);
      });
    }
  };

  getPage = function() {
    var slugs;
    slugs = Session.get(TAX_SESSION.SUBURL);
    if (slugs == null) {
      return TAX_TEMPLATE.MAIN;
    }
    slugs = slugs.split("/");
    slugs = _.filter(slugs, function(s) {
      return s !== "";
    });
    if (slugs.length >= 1) {
      if (slugs[0] === TAX_PAGE.COMPOSE) {
        return TAX_TEMPLATE.NEW;
      }
    }
    return TAX_TEMPLATE.MAIN;
  };

}).call(this);
