// Generated by CoffeeScript 1.6.3
(function() {
  var ITEMS_PER_PAGE, createTax, getPage;

  this.TAX_SESSION = {
    SUBURL: "TAXSubUrl"
  };

  this.TAX_TEMPLATE = {
    MAIN: "tax_all",
    NEW: "tax_compose"
  };

  this.TAX_PAGE = {
    MAIN: "all",
    COMPOSE: "new"
  };

  ITEMS_PER_PAGE = 20;

  Template.tax.created = function() {
    return scrollTop();
  };

  Template.tax.view = function() {
    return Template[getPage()]();
  };

  Template.tax_compose.created = function() {
    return Template[getPage()]();
  };

  Template.tax_compose.rendered = function() {
    $("#tax-compose-form").off("submit");
    return $("#tax-compose-form").on("submit", function(evt) {
      evt.preventDefault();
      return createTax();
    });
  };

  Template.tax_compose.events = {
    "click .save-active-btn": function(evt) {
      evt.preventDefault();
      return createTax(true);
    },
    "click .save-btn": function(evt) {
      evt.preventDefault();
      return createTax();
    }
  };

  createTax = function(make_active) {
    var data_lis, dic, entry, _i, _len;
    if (make_active == null) {
      make_active = false;
    }
    if ($("#tax-compose-form").parsley("validate")) {
      data_lis = $("#tax-compose-form").serializeArray();
      dic = {};
      for (_i = 0, _len = data_lis.length; _i < _len; _i++) {
        entry = data_lis[_i];
        dic[entry.name] = entry.value;
      }
      dic.make_active = make_active;
      return Meteor.call("new_tax", dic, function() {
        return Router.navigate("/taxes", true);
      });
    }
  };

  getPage = function() {
    var slugs;
    slugs = Session.get(TAX_SESSION.SUBURL);
    if (slugs == null) {
      return TAX_TEMPLATE.MAIN;
    }
    slugs = slugs.split("/");
    slugs = _.filter(slugs, function(s) {
      return s !== "";
    });
    if (slugs.length >= 1) {
      if (slugs[0] === TAX_PAGE.COMPOSE) {
        return TAX_TEMPLATE.NEW;
      }
    }
    return TAX_TEMPLATE.MAIN;
  };

}).call(this);
